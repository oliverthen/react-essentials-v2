{"ast":null,"code":"var _jsxFileName = \"/Users/ot/Desktop/CodingPlan-SWE2024/React/05-react-essentials-2/03-react-router-advanced/frontend/src/App.js\";\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport EventsPage, { loader as eventsLoader } from './pages/EventsPage';\nimport EventDetailPage, { loader as eventDetailsLoader, action as deleteEventAction } from './pages/EventDetailPage';\nimport NewEventPage, { action as newEventAction } from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nimport ErrorPage from './pages/Error';\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 17\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 27\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 30\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: ':eventId',\n      id: 'event-detail',\n      loader: eventDetailsLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this),\n        action: deleteEventAction\n      }, {\n        path: 'edit',\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this)\n      }]\n    }, {\n      path: 'new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this),\n      action: newEventAction\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","loader","eventsLoader","EventDetailPage","eventDetailsLoader","action","deleteEventAction","NewEventPage","newEventAction","EditEventPage","RootLayout","EventsRootLayout","ErrorPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["/Users/ot/Desktop/CodingPlan-SWE2024/React/05-react-essentials-2/03-react-router-advanced/frontend/src/App.js"],"sourcesContent":["import {createBrowserRouter, RouterProvider} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport EventsPage, {loader as eventsLoader} from './pages/EventsPage';\nimport EventDetailPage, {loader as eventDetailsLoader, action as deleteEventAction} from './pages/EventDetailPage';\nimport NewEventPage, {action as newEventAction} from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nimport ErrorPage from './pages/Error';\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst router = createBrowserRouter([\n\t{ path: '/', \n\t\telement: <RootLayout />,\n\t\terrorElement: <ErrorPage />, \n\t\tchildren: [\n\t\t{ index: true, element: <HomePage /> },\n\t\t{ path: 'events', element: <EventsRootLayout />, children:  [\n\t\t\t{ index: true, \n\t\t\t\telement: <EventsPage />, \n\t\t\t\tloader: eventsLoader\n\t\t\t},\n\t\t\t{ path: ':eventId', \n\t\t\t\tid: 'event-detail',\n\t\t\t\tloader: eventDetailsLoader,\n\t\t\t\tchildren: [\n\t\t\t\t\t{ \n\t\t\t\t\t\tindex: true, \n\t\t\t\t\t\telement: <EventDetailPage />,\n\t\t\t\t\t\taction: deleteEventAction,\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\t{ path: 'edit', \n\t\t\t\t\t\telement: <EditEventPage /> \n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t\n\t\t\t{ path: 'new', \n\t\t\t\telement: <NewEventPage />,\n\t\t\t\taction: newEventAction\n\t\t\t},\n\t\t\t\n\t\t]},\n\n\t\t],\n\t},\n]);\n\nfunction App() {\n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA,SAAQA,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACpE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,IAAGC,MAAM,IAAIC,YAAY,QAAO,oBAAoB;AACrE,OAAOC,eAAe,IAAGF,MAAM,IAAIG,kBAAkB,EAAEC,MAAM,IAAIC,iBAAiB,QAAO,yBAAyB;AAClH,OAAOC,YAAY,IAAGF,MAAM,IAAIG,cAAc,QAAO,sBAAsB;AAC3E,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,eAAe;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGlB,mBAAmB,CAAC,CAClC;EAAEmB,IAAI,EAAE,GAAG;EACVC,OAAO,eAAEH,OAAA,CAACJ,UAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,YAAY,eAAER,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC3BE,QAAQ,EAAE,CACV;IAAEC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACf,QAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACtC;IAAEL,IAAI,EAAE,QAAQ;IAAEC,OAAO,eAAEH,OAAA,CAACH,gBAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEE,QAAQ,EAAG,CAC3D;MAAEC,KAAK,EAAE,IAAI;MACZP,OAAO,eAAEH,OAAA,CAACd,UAAU;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvBpB,MAAM,EAAEC;IACT,CAAC,EACD;MAAEc,IAAI,EAAE,UAAU;MACjBS,EAAE,EAAE,cAAc;MAClBxB,MAAM,EAAEG,kBAAkB;MAC1BmB,QAAQ,EAAE,CACT;QACCC,KAAK,EAAE,IAAI;QACXP,OAAO,eAAEH,OAAA,CAACX,eAAe;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAC5BhB,MAAM,EAAEC;MACT,CAAC,EACD;QAAEU,IAAI,EAAE,MAAM;QACbC,OAAO,eAAEH,OAAA,CAACL,aAAa;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAC1B,CAAC;IAEH,CAAC,EAED;MAAEL,IAAI,EAAE,KAAK;MACZC,OAAO,eAAEH,OAAA,CAACP,YAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACzBhB,MAAM,EAAEG;IACT,CAAC;EAED,CAAC;AAGH,CAAC,CACD,CAAC;AAEF,SAASkB,GAAGA,CAAA,EAAG;EACb,oBAAOZ,OAAA,CAAChB,cAAc;IAACiB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C;AAACM,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}