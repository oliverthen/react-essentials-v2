{"ast":null,"code":"var _jsxFileName = \"/Users/ot/Desktop/CodingPlan-SWE2024/React/05-react-essentials-2/03-react-router-advanced/frontend/src/App.js\";\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport EventsPage from './pages/EventsPage';\nimport EventDetailPage from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  // element: <RootLayout />,\n  // errorElement: <ErrorPage />, \n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: '/events/:eventId',\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 40\n    }, this)\n  }, {\n    path: '/events/new',\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 35\n    }, this)\n  }, {\n    path: '/events/:eventId/edit',\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 45\n    }, this)\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","jsxDEV","_jsxDEV","router","path","children","index","element","fileName","_jsxFileName","lineNumber","columnNumber","App","_c","$RefreshReg$"],"sources":["/Users/ot/Desktop/CodingPlan-SWE2024/React/05-react-essentials-2/03-react-router-advanced/frontend/src/App.js"],"sourcesContent":["import {createBrowserRouter, RouterProvider} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport EventsPage from './pages/EventsPage';\nimport EventDetailPage from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst router = createBrowserRouter([\n\t{ path: '/', \n\t\t// element: <RootLayout />,\n\t\t// errorElement: <ErrorPage />, \n\t\tchildren: [\n\t\t{ index: true, element: <HomePage /> },\n\t\t{ path: '/events', element: <EventsPage /> },\n\t\t{ path: '/events/:eventId', element: <EventDetailPage /> },\n\t\t{ path: '/events/new', element: <NewEventPage /> },\n\t\t{ path: '/events/:eventId/edit', element: <EditEventPage /> },\n\t\t],\n\t},\n]);\n\nfunction App() {\n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA,SAAQA,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACpE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;;AAEjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGT,mBAAmB,CAAC,CAClC;EAAEU,IAAI,EAAE,GAAG;EACV;EACA;EACAC,QAAQ,EAAE,CACV;IAAEC,KAAK,EAAE,IAAI;IAAEC,OAAO,eAAEL,OAAA,CAACN,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACtC;IAAEP,IAAI,EAAE,SAAS;IAAEG,OAAO,eAAEL,OAAA,CAACL,UAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAC5C;IAAEP,IAAI,EAAE,kBAAkB;IAAEG,OAAO,eAAEL,OAAA,CAACJ,eAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAC1D;IAAEP,IAAI,EAAE,aAAa;IAAEG,OAAO,eAAEL,OAAA,CAACH,YAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAClD;IAAEP,IAAI,EAAE,uBAAuB;IAAEG,OAAO,eAAEL,OAAA,CAACF,aAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC;AAE9D,CAAC,CACD,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EACb,oBAAOV,OAAA,CAACP,cAAc;IAACQ,MAAM,EAAEA;EAAO;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C;AAACE,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}