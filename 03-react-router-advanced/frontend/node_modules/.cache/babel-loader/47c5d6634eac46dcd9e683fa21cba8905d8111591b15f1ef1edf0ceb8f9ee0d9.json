{"ast":null,"code":"var _jsxFileName = \"/Users/ot/Desktop/CodingPlan-SWE2024/React/05-react-essentials-2/03-react-router-advanced/frontend/src/pages/NewEventPage.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  const responseBody = await response.json();\n  if (response.status === 422) {\n    return json(responseBody, {\n      status: response.status\n    });\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","headers","body","JSON","stringify","responseBody","status","ok","message","$RefreshReg$"],"sources":["/Users/ot/Desktop/CodingPlan-SWE2024/React/05-react-essentials-2/03-react-router-advanced/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\n\nimport EventForm from \"../components/EventForm\";\n\nfunction NewEventPage() {\n\treturn (\n\t\t<EventForm method=\"post\"/>\n\t);\n}\n\nexport default NewEventPage;\n\nexport async function action({request, params}) {\n\tconst data = await request.formData();\n\n\tconst eventData = {\n\t\ttitle: data.get('title'),\n\t\timage: data.get('image'),\n\t\tdate: data.get('date'),\n\t\tdescription: data.get('description'),\n\t}\n\n\tconst response = await fetch('http://localhost:8080/events', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify(eventData)\n\t});\n\n\tconst responseBody = await response.json(); \n\tif (response.status === 422) {\n\t\treturn json(responseBody, { status: response.status });\n\t}\n\n\tif (!response.ok) {\n\t\tthrow json({message: 'Could not save event'}, { status: 500});\n\t}\n\n\treturn redirect('/events');\n\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAEjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EACvB,oBACCD,OAAA,CAACF,SAAS;IAACI,MAAM,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE5B;AAACC,EAAA,GAJQN,YAAY;AAMrB,eAAeA,YAAY;AAE3B,OAAO,eAAeO,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC/C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACjBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACpC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC5DlB,MAAM,EAAE,MAAM;IACdmB,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAC/B,CAAC,CAAC;EAEF,MAAMY,YAAY,GAAG,MAAMN,QAAQ,CAACvB,IAAI,CAAC,CAAC;EAC1C,IAAIuB,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;IAC5B,OAAO9B,IAAI,CAAC6B,YAAY,EAAE;MAAEC,MAAM,EAAEP,QAAQ,CAACO;IAAO,CAAC,CAAC;EACvD;EAEA,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;IACjB,MAAM/B,IAAI,CAAC;MAACgC,OAAO,EAAE;IAAsB,CAAC,EAAE;MAAEF,MAAM,EAAE;IAAG,CAAC,CAAC;EAC9D;EAEA,OAAO7B,QAAQ,CAAC,SAAS,CAAC;AAE3B;AAAC,IAAAU,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}